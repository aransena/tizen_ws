<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, user-scalable=no">
<title>Hello TAU</title>
<link rel="stylesheet" href="lib/tau/wearable/theme/default/tau.css" />
<link rel="stylesheet" media="all"
	href="lib/tau/wearable/theme/default/tau.circle.min.css">
<!--load theme file for your application-->
<link rel="stylesheet" href="css/style.css" />
</head>
<body>

	<div class="ui-page ui-page-active" id="robotControl">
		<header class="ui-header" id="header"> </header>
		<div class="ui-content" style="position: absolute;">
			<!-- <div id="percentT">100%</div> -->
			<canvas id="canvas" width="360" height="360"
				style="position: relative; top: 0px; letter-spacing: 0px; z-index:1;"></canvas>
			<canvas id="canvas2" width="100" height="100"
				style="position: relative; top: 0px; letter-spacing: 0px; z-index:2;"></canvas>
		</div>
		<script type="text/javascript">
		var sensors = tizen.sensorservice.getAvailableSensors();
		console.log("Available sensor: " + sensors.toString());
	var msgPack = {
	  'CW': 0,
	  'CCW': 0,
	  'S_L': 0,
	  'S_R': 0,
	  'P': 0,
	  'LH': 0,
	  'NUM_F': 0,
	  'LGT' : 0,
	  'LGT_S':0,
	  'reset': function(all){
		  
		  this.CW = 0;
		  this.CCW = 0;
		  this.S_L = 0;
		  this.S_R = 0;
		  this.P = 0;
		  //this.LGT = 0;
		  if(all){
			  this.LH = 0;
			  this.NUM_F = 0;
		  }
		  
		  }
	};

	var touchTypes = {
		SWIPE_L : 1,
		SWIPE_R : 2,
		PRESS : 3
	};
	
	document.getElementById("canvas").style.backgroundColor = "white";
	document.getElementById("canvas").style.zIndex = "1";
	
	var c=document.getElementById("canvas");
	var ctx=c.getContext("2d");
	ctx.beginPath();
	ctx.arc(100,75,50,0,2*Math.PI);
	ctx.stroke();
	document.getElementById("header").style.backgroundColor = "white";
	
	var ws='';
	var url= window.localStorage.getItem('url').toString();	
	console.log("connecting to: "+url);  		  
	ws = new WebSocket(url);

	var controlP=0;

	////////// Websocket related functions /////////
	
	ws.onclose = function() {
		
	};
	ws.onmessage = function(msg) {
		console.log(msg.data); // Send the message 'Ping' to the server
		navigator.vibrate(100);		
	};
	ws.onerror = function () {
		console.error("Websocket Error!");
		alert("Websocket Error!");
		try {
			tizen.application.getCurrentApplication().exit();
		} catch (ignore) {
			console.error("error exiting program");
		}
	};
	///////////////////////////////////////////////
	
	
	//////////////////Events//////////////////////
	var page = document.getElementById("robotControl");

	/*var worker = new Worker('js/worker.js');

	worker.addEventListener('message',function(e){
		console.log(e.data);
		},false);*/

	sensorService = tizen.sensorservice ||
        (window.webapis && window.webapis.sensorservice) ||
        null;
	var proximitySensor	= sensorService
        .getDefaultSensor("LIGHT");
	//var proximitySensor = webapis.sensorservice.getDefaultSensor("PROXIMITY");

	function onGetSuccessCB(sensorData)
	{
		var lightLevel = sensorData.lightLevel;
	   console.log("Light Level: " + lightLevel);
	   msgPack.LGT = lightLevel;
	   if(lightLevel<200){
		   msgPack.LGT_S=1;
	   }
	   else{
		   msgPack.LGT_S=0;
	   }
	}

	function sensorCheck(){
		proximitySensor.getLightSensorData(onGetSuccessCB);
	}
	var sensorInterval;
	function onsuccessCB()
	{
	   console.log("The proximity sensor started successfully.");
	   
	    sensorInterval = setInterval(sensorCheck, 1000);
	}

	function startSensor(){
		proximitySensor.start(onsuccessCB);
	}
	startSensor();
	
	// Rotary Events //
    var rotaryEventHandler = function(e)
    {
        
        var ev_time=tizen.time.getCurrentDateTime().getSeconds()+"."+tizen.time.getCurrentDateTime().getMilliseconds();
       if (e.detail.direction === "CW")
       {
    	   console.log("Rotate CW:\t'"+ ev_time);
    	   //ws.send("CW\t"+ev_time);
    	   msgPack.CW=1;
    	   
       }
       else if (e.detail.direction === "CCW") 
       {
    	   console.log("Rotate CCW:\t"+tizen.time.getCurrentDateTime().getMilliseconds());
    	   //ws.send("CCW\t"+ev_time);
    	   msgPack.CCW=1;
    	   
       }
        
    };

	page.addEventListener("rotarydetent", rotaryEventHandler,false);	
	
	
	////// Touch Events //////


	// Multitouch Events //
	var touchDownT = 0;
	var touchType = "";
	var touchDownXY = [0,0];
	var lastPos =[0,0];

	var timer; // long press timer
	var longtouch_chk = false;
	var touchduration = 500; //length of time we want the user to touch before we do something
		
	
    var multiTouchHandler = function(e){
    	longtouch_chk = false;
    	if(ws.readyState==1){
        	timer = setTimeout(longtouch, touchduration);
            touchDownT = Date.now();
    		e.preventDefault();
			touchDownXY[0] = e.touches[0].pageX;
			touchDownXY[1] = e.touches[0].pageY;
			lastPos[0] = touchDownXY[0];
			lastPos[1] = touchDownXY[1];
									
			var touchCount = e.touches.length;
			console.log("touches: " + touchCount);
			
			//ws.send("Touches: " + touchCount);
			msgPack.NUM_F = touchCount;
			
			if(touchCount==2){
	    		//touchType = "Two Finger";
	    		document.getElementById("canvas").style.backgroundColor = "blue";
	    		document.getElementById("header").style.backgroundColor = "blue";
			}
			else if(touchCount==1){
	    		//touchType = "One Finger";
	    		document.getElementById("canvas").style.backgroundColor = "red";
	    		document.getElementById("header").style.backgroundColor = "red";
			}
			else{
	    		console.log("Error");
	    		//ws.send("Unknown");
			}
			
    	}
    	else{
        	console.log("Websocket not ready for touch event");
       	}
    };

    var longtouch = function(e){
		//ws.send(touchType + " Hold");
		longtouch_chk = true;
		msgPack.LH =1;
    };
    
    var cancelTouchHandler = function(e){
   		//e.preventDefault();
   		//ws.send("touch cancelled");
    };
	
    var moveTouchHandler = function(e){
		e.preventDefault();
		lastPos[0]=e.touches[0].pageX;
		lastPos[1]=e.touches[0].pageY;
    };

    function getSwipeType(Pos1, Pos2){
        var dist_lim = 30;
        var x_lim = dist_lim;
        var y_lim = dist_lim;
//        var swipeType = '';
        
    	var dist = Math.sqrt(Math.pow(Pos1[0]- Pos2[0],2)+Math.pow(Pos1[1]- Pos2[1],2));

    	if(dist > dist_lim){
        	if(Math.abs(Pos1[0]-Pos2[0])>dist_lim){
		    	if(Pos1[0]>Pos2[0]){
//					swipeType= touchTypes.SWIPE_R;//' Right Swipe';
					msgPack.S_R = 1;
				}
		    	else{
//			    	swipeType= touchTypes.SWIPE_L; //' Left Swipe';
			    	msgPack.S_L = 1;
		    	}
        	}
    	}
    	else{
//			swipeType= touchTypes.PRESS;//" Press";
			msgPack.P = 1;
        }
    }
    var endTouch = false;
    var endTouchHandler = function(e){
    	endTouch = true;
        document.getElementById("canvas").style.backgroundColor = "white";
		document.getElementById("header").style.backgroundColor = "white";

        if(timer){			// if a long press wasn't detected...
			clearTimeout(timer);
			msgPack.LH = 0;
        }

        if(!longtouch_chk){
			e.preventDefault();
	        var dt_lim = 400;
//	        var swipeType = '';
	        
	        var dur = Date.now() - touchDownT;
	
	        console.log("Touch event duration: " + dur);
	
        	if(dur<dt_lim){
            	getSwipeType(lastPos, touchDownXY);
				//ws.send(touchType + swipeType);
				
            }
        	else{
        		//ws.send(touchType + " Press");
        		msgPack.P = 1;
        	}
        	
        }

        
    };
    
    page.addEventListener('touchstart', multiTouchHandler, false);
	page.addEventListener('touchmove', moveTouchHandler, false);
	page.addEventListener('touchcancel', cancelTouchHandler, false);
    page.addEventListener('touchend', endTouchHandler, false);

	// HW Back Button Press Event - modified from app.js to unregister rotary handler from window //
	
    window.addEventListener( 'tizenhwkey', function( ev ) {
		if( ev.keyName === "back" ) {
			console.log("back button pressed");
			msgPack.BTN =1;
		}
	} );

	/*if(ws){
	ws.close();
}
document.removeEventListener("rotarydetent", rotaryEventHandler);	
var page = document.getElementsByClassName( 'ui-page-active' )[0],
	pageid = page ? page.id : "";

if( pageid === "pageMain" ) {
	try {
		tizen.application.getCurrentApplication().exit();
	} catch (ignore) {
		console.error("error exiting program");
	}
} 
else {
	window.history.back();
}*/

	/////////////////////////////////////////////////////////
	
	function sysComms(){
		ws.send(JSON.stringify(msgPack));
		if(!endTouch){
			msgPack.reset(false);
		}
		else{
			msgPack.reset(true);
		}
		endTouch = false;

	}
	
	ws.onopen = function() {
		ws.send('USER'); // Send the message 'Ping' to the server
	};
	
	var commsInterval;
	ws.onmessage = function(msg){
		console.log("message: " + msg.data);
		if(msg.data=="USER"){
			console.log("CONNECTED");
			ws.send("RUN");
			commsInterval = setInterval(sysComms, 300);
		}

	};

	var hidden,visibilityChange;
	if (typeof document.hidden !== "undefined") {
		hidden = "hidden";
		visibilityChange = "visibilitychange";
	} else if (typeof document.webkitHidden !== "undefined") {
		hidden = "webkitHidden";
		visibilityChange = "webkitvisibilitychange";
	}
	function handleVisibilityChange(){
	if (document[hidden]){
			console.log("Page is now hidden.");
			ws.close()
			//clearInterval(sensorInterval);
			clearInterval(commsInterval);
	    } else {
		console.log("Page is now visible.");
			if(!ws){
				ws = new WebSocket(url);
			}
			startSensor();
			setInterval(commsInterval);
	    }
	}
	document.addEventListener(visibilityChange, handleVisibilityChange, false);
   </script>


	</div>
	

</body>
</html>